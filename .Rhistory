#Generiamo i plot relativi al solo POC_4
plot_list <- lapply(gruppi_POC_1[1:5], function(gr) generate_plot_I(gr))
grid.arrange(grobs = plot_list, ncol = 5, top = "POC_1")
#Generiamo i plot relativi al solo POC_4
plot_list <- lapply(gruppi_POC_1[1:5], function(gr) generate_plot_P(gr))
grid.arrange(grobs = plot_list, ncol = 5, top = "POC_1")
#Generiamo i plot relativi al solo POC_4
plot_list <- lapply(gruppi_POC_1[1:5], function(gr) generate_plot_V(gr))
grid.arrange(grobs = plot_list, ncol = 5, top = "POC_1")
#Generiamo i plot relativi al solo POC_4
plot_list <- lapply(gruppi_POC_2[1:5], function(gr) generate_plot_V(gr))
grid.arrange(grobs = plot_list, ncol = 5, top = "POC_2")
#Generiamo i plot relativi al solo POC_4
plot_list <- lapply(gruppi_POC_3[1:5], function(gr) generate_plot_V(gr))
grid.arrange(grobs = plot_list, ncol = 5, top = "POC_3")
#Generiamo i plot relativi al solo POC_4
plot_list <- lapply(gruppi_POC_4[1:5], function(gr) generate_plot_V(gr))
grid.arrange(grobs = plot_list, ncol = 5, top = "POC_4")
#Generiamo i plot relativi al solo POC_4
plot_list <- lapply(gruppi_POC_5[1:5], function(gr) generate_plot_V(gr))
grid.arrange(grobs = plot_list, ncol = 5, top = "POC_5")
#Generiamo i plot relativi al solo POC_4
plot_list <- lapply(gruppi_POC_6[1:5], function(gr) generate_plot_V(gr))
grid.arrange(grobs = plot_list, ncol = 5, top = "POC_6")
#Generiamo i plot relativi al solo POC_4
plot_list <- lapply(gruppi_POC_7[1:5], function(gr) generate_plot_V(gr))
grid.arrange(grobs = plot_list, ncol = 5, top = "POC_7")
saveRDS(df_C2, "df_C2.rds")
saveRDS(df_C4, "df_C4.rds")
saveRDS(df_C5, "df_C5.rds")
saveRDS(df_C7, "df_C7.rds")
#load("my_workspace_project_clean.RData")
save.image(file = "my_workspace_project_clean.RData")
df_C5 <- readRDS("df_C5.rds")
df_C7 <- readRDS("df_C7.rds")
# Convertiamo in variabili numeriche quelle categoriche
df_C2 <- df_C2 %>%
mutate(Stagione = case_when(
Stagione == "inverno" ~ 0,
Stagione == "estate" ~ 1,
Stagione == "primavera/autunno" ~ 2,
))
df_C2 <- df_C2 %>%
mutate(POC = case_when(
grepl("1", POC) ~ 1,
grepl("2", POC) ~ 2,
grepl("3", POC) ~ 3,
grepl("4", POC) ~ 4,
grepl("5", POC) ~ 5,
grepl("6", POC) ~ 6,
grepl("7", POC) ~ 7,
grepl("8", POC) ~ 8,
TRUE ~ as.numeric(POC)  # Mantieni i valori originali se non corrispondono a nessuno dei casi sopra
))
# Rendiamole variabili di tipo categorico usando "factor"
df_C2$POC <- as.factor(df_C2$POC)
df_C2$Stagione <- as.factor(df_C2$Stagione)
View(df_C2)
View(df_C2)
corr_matrix <- df_C2 %>%
dplyr::select(where(is.numeric)) %>%
as.matrix() %>%
cor()
corrplot(corr_matrix)
#! ---------------- Leggiamo il Dataset -------------------
library(tidyverse)
library(dplyr)
library(ggplot2)
library(stats)
library(corrplot)
df_C2 <- readRDS("df_C2.rds")
df_C4 <- readRDS("df_C4.rds")
df_C5 <- readRDS("df_C5.rds")
df_C7 <- readRDS("df_C7.rds")
# Convertiamo in variabili numeriche quelle categoriche
df_C2 <- df_C2 %>%
mutate(Stagione = case_when(
Stagione == "inverno" ~ 0,
Stagione == "estate" ~ 1,
Stagione == "primavera/autunno" ~ 2,
))
df_C2 <- df_C2 %>%
mutate(POC = case_when(
grepl("1", POC) ~ 1,
grepl("2", POC) ~ 2,
grepl("3", POC) ~ 3,
grepl("4", POC) ~ 4,
grepl("5", POC) ~ 5,
grepl("6", POC) ~ 6,
grepl("7", POC) ~ 7,
grepl("8", POC) ~ 8,
TRUE ~ as.numeric(POC)  # Mantieni i valori originali se non corrispondono a nessuno dei casi sopra
))
# Rendiamole variabili di tipo categorico usando "factor"
df_C2$POC <- as.factor(df_C2$POC)
df_C2$Stagione <- as.factor(df_C2$Stagione)
#! ---------------- PCA e Clustering -----------
corr_matrix <- df_C2 %>%
dplyr::select(where(is.numeric)) %>%
as.matrix() %>%
cor()
corrplot(corr_matrix)
#! ---------------- PCA e Clustering -----------
corr_matrix <- df_C2 %>%
dplyr::select(-Gruppo, where(is.numeric)) %>%  # Rimuovi la colonna 'Gruppo'
as.matrix() %>%
cor()
corrplot(corr_matrix)
corr_matrix <- df_C2 %>%
dplyr::select(where(is.numeric)) %>%
select(-Gruppo)%>%
as.matrix() %>%
cor()
corrplot(corr_matrix)
#! ---------------- Leggiamo il Dataset -------------------
library(tidyverse)
library(dplyr)
library(ggplot2)
library(stats)
library(corrplot)
df_C2 <- readRDS("df_C2.rds")
df_C4 <- readRDS("df_C4.rds")
df_C5 <- readRDS("df_C5.rds")
df_C7 <- readRDS("df_C7.rds")
# Convertiamo in variabili numeriche quelle categoriche
df_C2 <- df_C2 %>%
mutate(Stagione = case_when(
Stagione == "inverno" ~ 0,
Stagione == "estate" ~ 1,
Stagione == "primavera/autunno" ~ 2,
))
df_C2 <- df_C2 %>%
mutate(POC = case_when(
grepl("1", POC) ~ 1,
grepl("2", POC) ~ 2,
grepl("3", POC) ~ 3,
grepl("4", POC) ~ 4,
grepl("5", POC) ~ 5,
grepl("6", POC) ~ 6,
grepl("7", POC) ~ 7,
grepl("8", POC) ~ 8,
TRUE ~ as.numeric(POC)  # Mantieni i valori originali se non corrispondono a nessuno dei casi sopra
))
corr_matrix <- df_C2 %>%
dplyr::select(where(is.numeric)) %>%
select(-Gruppo)%>%
as.matrix() %>%
cor()
corrplot(corr_matrix)
corr_matrix <- df_C2 %>%
dplyr::select(where(is.numeric)) %>%
select(-Gruppo, -Amperora, -Wattora)%>%
as.matrix() %>%
cor()
corrplot(corr_matrix)
corr_matrix <- df_C2 %>%
dplyr::select(where(is.numeric)) %>%
select(-Gruppo, -Amperora, -Wattora, -POC, -Stagione)%>%
as.matrix() %>%
cor()
corrplot(corr_matrix)
# Visualizza un boxplot prima dell'eliminazione degli outlier
boxplot(df_C2[df_C2$POC == 1, "Wattora"], main = "Boxplot di Wattora (prima dell'eliminazione)")
# Visualizza un boxplot prima dell'eliminazione degli outlier
boxplot(df_C2[df_C2$POC == 1, "Wattora"],df_C2[df_C2$POC == 2, "Wattora"]df_C2[df_C2$POC == 3, "Wattora"] main = "Boxplot di Wattora (prima dell'eliminazione)")
# Visualizza un boxplot prima dell'eliminazione degli outlier
boxplot(df_C2[df_C2$POC == 1, "Wattora"],df_C2[df_C2$POC == 2, "Wattora"],df_C2[df_C2$POC == 3, "Wattora"], main = "Boxplot di Wattora (prima dell'eliminazione)")
# Visualizza un boxplot prima dell'eliminazione degli outlier
boxplot(df_C2[df_C2$POC == 1, "Wattora"],df_C2[df_C2$POC == 2, "Wattora"],
df_C2[df_C2$POC == 3, "Wattora"],df_C2[df_C2$POC == 4, "Wattora"],
df_C2[df_C2$POC == 4, "Wattora"],df_C2[df_C2$POC == 5, "Wattora"],
df_C2[df_C2$POC == 6, "Wattora"],df_C2[df_C2$POC == 7, "Wattora"],df_C2[df_C2$POC == 8, "Wattora"],
main = "Boxplot di Wattora (prima dell'eliminazione)")
# Visualizza un boxplot prima dell'eliminazione degli outlier
boxplot(df_C2[df_C2$POC == 1, "Wattora"],df_C2[df_C2$POC == 2, "Wattora"],
df_C2[df_C2$POC == 3, "Wattora"],df_C2[df_C2$POC == 4, "Wattora"],
df_C2[df_C2$POC == 4, "Wattora"],df_C2[df_C2$POC == 5, "Wattora"],
df_C2[df_C2$POC == 6, "Wattora"],df_C2[df_C2$POC == 7, "Wattora"],
df_C2[df_C2$POC == 8, "Wattora"],main = "Boxplot di Wattora (prima dell'eliminazione)")
# Aggiungi nomi sotto ad ogni boxplot sull'asse delle x
text(seq_along(unique(data_for_boxplot$POC)), par("usr")[3] - 0.2,
labels = levels(factor(data_for_boxplot$POC)),
xpd = TRUE, srt = 45, adj = c(1, 1), cex = 0.8)
labels = levels(df_C2$POC)
# Aggiungi nomi sotto ad ogni boxplot sull'asse delle x
text(labels = levels(df_C2$POC))
text(seq_along(levels(df_C2$POC)), par("usr")[3] - 0.2,
labels = levels(df_C2$POC),
xpd = TRUE, srt = 45, adj = c(1, 1), cex = 0.8)
# Visualizza un boxplot prima dell'eliminazione degli outlier
boxplot(df_C2[df_C2$POC == 1, "Wattora"],df_C2[df_C2$POC == 2, "Wattora"],
df_C2[df_C2$POC == 3, "Wattora"],df_C2[df_C2$POC == 4, "Wattora"],
df_C2[df_C2$POC == 4, "Wattora"],df_C2[df_C2$POC == 5, "Wattora"],
df_C2[df_C2$POC == 6, "Wattora"],df_C2[df_C2$POC == 7, "Wattora"],
df_C2[df_C2$POC == 8, "Wattora"],main = "Boxplot di Wattora (prima dell'eliminazione)")
text(seq_along(levels(df_C2$POC)), par("usr")[3] - 0.2,
labels = levels(df_C2$POC),
xpd = TRUE, srt = 45, adj = c(1, 1), cex = 0.8)
library(reshape2)
outlier_limit <- 15000
# Identifica gli outlier
outliers <- df_C2$Wattora > outlier_limit | df_C2$Wattora < -outlier_limit
# Stampa il numero di outlier
cat("Numero di outlier:", sum(outliers), "\n")
outlier_limit <- 10000
# Identifica gli outlier
outliers <- df_C2$Wattora > outlier_limit | df_C2$Wattora < -outlier_limit
# Stampa il numero di outlier
cat("Numero di outlier:", sum(outliers), "\n")
outlier_limit <- 1000
# Identifica gli outlier
outliers <- df_C2$Wattora > outlier_limit | df_C2$Wattora < -outlier_limit
# Stampa il numero di outlier
cat("Numero di outlier:", sum(outliers), "\n")
outlier_limit <- 5000
# Identifica gli outlier
outliers <- df_C2$Wattora > outlier_limit | df_C2$Wattora < -outlier_limit
# Stampa il numero di outlier
cat("Numero di outlier:", sum(outliers), "\n")
# Visualizza un boxplot con colori diversi
boxplot(Wattora ~ POC, data = df_C2,
main = "Boxplot di Wattora (prima dell'eliminazione)",
xlab = "POC",
col = rainbow(length(unique(df_C2$POC))))
grid()
# Visualizza un boxplot dopo l'eliminazione degli outlier
boxplot(Wattora ~ POC, data = df_C2,
main = "Boxplot di Wattora (prima dell'eliminazione)",
xlab = "POC",
col = rainbow(length(unique(df_C2$POC))))
# Elimina gli outlier dal dataframe
df_C2 <- df_C2[!outliers, ]
# Visualizza un boxplot dopo l'eliminazione degli outlier
boxplot(Wattora ~ POC, data = df_C2,
main = "Boxplot di Wattora (dopo dell'eliminazione)",
xlab = "POC",
col = rainbow(length(unique(df_C2$POC))))
grid()
outlier_limit <- 1000
# Identifica gli outlier
outliers <- df_C2$Wattora > outlier_limit | df_C2$Wattora < -outlier_limit
# Stampa il numero di outlier
cat("Numero di outlier:", sum(outliers), "\n")
# Elimina gli outlier dal dataframe
df_C2 <- df_C2[!outliers, ]
# Visualizza un boxplot dopo l'eliminazione degli outlier
boxplot(Wattora ~ POC, data = df_C2,
main = "Boxplot di Wattora (dopo dell'eliminazione)",
xlab = "POC",
col = rainbow(length(unique(df_C2$POC))))
grid()
df_C2 <- readRDS("df_C2.rds")
# Convertiamo in variabili numeriche quelle categoriche
df_C2 <- df_C2 %>%
mutate(Stagione = case_when(
Stagione == "inverno" ~ 0,
Stagione == "estate" ~ 1,
Stagione == "primavera/autunno" ~ 2,
))
df_C2 <- df_C2 %>%
mutate(POC = case_when(
grepl("1", POC) ~ 1,
grepl("2", POC) ~ 2,
grepl("3", POC) ~ 3,
grepl("4", POC) ~ 4,
grepl("5", POC) ~ 5,
grepl("6", POC) ~ 6,
grepl("7", POC) ~ 7,
grepl("8", POC) ~ 8,
TRUE ~ as.numeric(POC)  # Mantieni i valori originali se non corrispondono a nessuno dei casi sopra
))
outlier_limit <- 5000
# Identifica gli outlier
outliers <- df_C2$Wattora > outlier_limit | df_C2$Wattora < -outlier_limit
# Stampa il numero di outlier
cat("Numero di outlier:", sum(outliers), "\n")
# Visualizza un boxplot con colori diversi
boxplot(Wattora ~ POC, data = df_C2,
main = "Boxplot Wattora ~ POC (before removing outliers)",
xlab = "POC",
col = rainbow(length(unique(df_C2$POC))))
grid()
# Elimina gli outlier dal dataframe
df_C2 <- df_C2[!outliers, ]
# Visualizza un boxplot dopo l'eliminazione degli outlier
boxplot(Wattora ~ POC, data = df_C2,
main = "Boxplot Wattora ~ POC (after removing the outliers)",
xlab = "POC",
col = rainbow(length(unique(df_C2$POC))))
grid()
outlier_limit <- 1000
# Identifica gli outlier
outliers <- df_C2$Wattora > outlier_limit | df_C2$Wattora < -outlier_limit
# Stampa il numero di outlier
cat("Numero di outlier:", sum(outliers), "\n")
# Elimina gli outlier dal dataframe
df_C2 <- df_C2[!outliers, ]
# Visualizza un boxplot dopo l'eliminazione degli outlier
boxplot(Wattora ~ POC, data = df_C2,
main = "Boxplot Wattora ~ POC (after removing the outliers)",
xlab = "POC",
col = rainbow(length(unique(df_C2$POC))))
grid()
# Creare un vettore per ciascun POC
gruppi_POC_1 <- df_C2$Gruppo[df_C2$POC == "POC_1"]
gruppi_POC_2 <- df_C2$Gruppo[df_C2$POC == "POC_2"]
gruppi_POC_3 <- df_C2$Gruppo[df_C2$POC == "POC_3"]
gruppi_POC_4 <- df_C2$Gruppo[df_C2$POC == "POC_4"]
gruppi_POC_5 <- df_C2$Gruppo[df_C2$POC == "POC_5"]
gruppi_POC_6 <- df_C2$Gruppo[df_C2$POC == "POC_6"]
gruppi_POC_7 <- df_C2$Gruppo[df_C2$POC == "POC_7"]
gruppi_POC_8 <- df_C2$Gruppo[df_C2$POC == "POC_8"]
df_C2 <- readRDS("df_C2.rds")
# Convertiamo in variabili numeriche quelle categoriche
df_C2 <- df_C2 %>%
mutate(Stagione = case_when(
Stagione == "inverno" ~ 0,
Stagione == "estate" ~ 1,
Stagione == "primavera/autunno" ~ 2,
))
df_C2 <- df_C2 %>%
mutate(POC = case_when(
grepl("1", POC) ~ 1,
grepl("2", POC) ~ 2,
grepl("3", POC) ~ 3,
grepl("4", POC) ~ 4,
grepl("5", POC) ~ 5,
grepl("6", POC) ~ 6,
grepl("7", POC) ~ 7,
grepl("8", POC) ~ 8,
TRUE ~ as.numeric(POC)  # Mantieni i valori originali se non corrispondono a nessuno dei casi sopra
))
# Visualizza un boxplot con colori diversi
boxplot(Wattora ~ POC, data = df_C2,
main = "Boxplot Wattora Stratified by POC (before removing outliers)",
xlab = "POC",
col = rainbow(length(unique(df_C2$POC))))
grid()
outlier_limit <- 5000
# Identifica gli outlier
outliers <- df_C2$Wattora > outlier_limit | df_C2$Wattora < -outlier_limit
# Stampa il numero di outlier
cat("Numero di outlier:", sum(outliers), "\n")
# Elimina gli outlier dal dataframe
df_C2 <- df_C2[!outliers, ]
# Visualizza un boxplot dopo l'eliminazione degli outlier
boxplot(Wattora ~ POC, data = df_C2,
main = "Boxplot Wattora Stratified by POC (after removing the outliers)",
xlab = "POC",
col = rainbow(length(unique(df_C2$POC))))
grid()
outlier_limit <- 1000
# Identifica gli outlier
outliers <- df_C2$Wattora > outlier_limit | df_C2$Wattora < -outlier_limit
# Stampa il numero di outlier
cat("Numero di outlier:", sum(outliers), "\n")
# Elimina gli outlier dal dataframe
df_C2 <- df_C2[!outliers, ]
# Visualizza un boxplot dopo l'eliminazione degli outlier
boxplot(Wattora ~ POC, data = df_C2,
main = "Boxplot Wattora Stratified by POC (after removing the outliers)",
xlab = "POC",
col = rainbow(length(unique(df_C2$POC))))
grid()
df_C2 <- readRDS("df_C2.rds")
# Convertiamo in variabili numeriche quelle categoriche
df_C2 <- df_C2 %>%
mutate(Stagione = case_when(
Stagione == "inverno" ~ 0,
Stagione == "estate" ~ 1,
Stagione == "primavera/autunno" ~ 2,
))
df_C2 <- df_C2 %>%
mutate(POC = case_when(
grepl("1", POC) ~ 1,
grepl("2", POC) ~ 2,
grepl("3", POC) ~ 3,
grepl("4", POC) ~ 4,
grepl("5", POC) ~ 5,
grepl("6", POC) ~ 6,
grepl("7", POC) ~ 7,
grepl("8", POC) ~ 8,
TRUE ~ as.numeric(POC)  # Mantieni i valori originali se non corrispondono a nessuno dei casi sopra
))
# Visualizza un boxplot con colori diversi
boxplot(Wattora ~ POC, data = df_C2,
main = "Boxplot Wattora Stratified by POC (before removing outliers)",
xlab = "POC",
col = rainbow(length(unique(df_C2$POC))))
grid()
pr.out <- prcomp(subset(df_C2, select = -c(Gruppo, POC, Stagione, Wattora, Amperora)), scale = TRUE)
pr.out <- prcomp(subset(df_C2, select = -c(Gruppo, POC, Stagione, Wattora, Amperora)))#, scale = TRUE)
View(df_C2)
# Elimina gli outlier dal dataframe
df_C2 <- df_C2[!outliers, ]
df_C2 <- readRDS("df_C2.rds")
# Convertiamo in variabili numeriche quelle categoriche
df_C2 <- df_C2 %>%
mutate(Stagione = case_when(
Stagione == "inverno" ~ 0,
Stagione == "estate" ~ 1,
Stagione == "primavera/autunno" ~ 2,
))
df_C2 <- df_C2 %>%
mutate(POC = case_when(
grepl("1", POC) ~ 1,
grepl("2", POC) ~ 2,
grepl("3", POC) ~ 3,
grepl("4", POC) ~ 4,
grepl("5", POC) ~ 5,
grepl("6", POC) ~ 6,
grepl("7", POC) ~ 7,
grepl("8", POC) ~ 8,
TRUE ~ as.numeric(POC)  # Mantieni i valori originali se non corrispondono a nessuno dei casi sopra
))
#! ----------------corr_matrix -------------
corr_matrix <- df_C2 %>%
dplyr::select(where(is.numeric)) %>%
select(-Gruppo, -Amperora, -Wattora, -POC, -Stagione)%>%
as.matrix() %>%
cor()
outlier_limit <- 1000
# Identifica gli outlier
outliers <- df_C2$Wattora > outlier_limit | df_C2$Wattora < -outlier_limit
# Stampa il numero di outlier
cat("Numero di outlier:", sum(outliers), "\n")
# Elimina gli outlier dal dataframe
df_C2 <- df_C2[!outliers, ]
# Rendiamo stagione e poc  variabili di tipo categorico usando "factor"
df_C2$POC <- as.factor(df_C2$POC)
df_C2$Stagione <- as.factor(df_C2$Stagione)
pr.out <- prcomp(subset(df_C2, select = -c(Gruppo, POC, Stagione, Wattora, Amperora)))#, scale = TRUE)
str(df_C2)
pr.out <- prcomp(subset(df_C2, select = -c(Gruppo, POC, Stagione, Mese, Wattora, Amperora)))#, scale = TRUE)
pr.out$rotation[,1]
names(pr.out)
varianza_spiegata <-sum(pr.out$sdev[1:4]^2) / sum(pr.out$sdev^2)  # 90% di varianza spiegata
library(GGally)
#df_C2_scaled <- as.data.frame(scale(df_C2))  # Scale the data frame
ggpairs(df_C2)
plot(pr.out)
par(mfrow=c(1,2)) #for a graph panel
fvs <- pr.out$sdev^2/sum(pr.out$sdev^2)
plot(
fvs,
xlab = " PC ",
ylab = " Fraction of variance explained",
main= "scree plot",
ylim = c(0, 1) ,
type = 'b') #scree plot
plot(
cumsum(fvs) ,
xlab = " PC ",
ylab = " Cumulative fraction of variance explained",
ylim = c(0, 1) ,
type = 'b')
par(mfrow=c(1,1)) #for a graph panel
biplot(pr.out, scale = 0)
#df_C2_scaled <- as.data.frame(scale(df_C2))  # Scale the data frame
ggpairs(subset(df_C2, select = -c(Gruppo, POC, Stagione, Mese, Wattora, Amperora)))
biplot( pr.out,
scale = 0,
cex = .6,
col=c(alpha(1,0), "red")
)
abline(h = 0, v = 0, lty = 2)
biplot( pr.out,
scale = 10,
cex = .6,
col=c(alpha(1,0), "red")
)
biplot( pr.out,
scale = 1,
cex = .8,
col=c(alpha(1,0), "red")
)
pr.out$rotation[,2]
pr.out$rotation[,1]
pr.out <- prcomp(subset(df_C2, select = -c(Gruppo, POC, Stagione, Mese, Wattora, Amperora)), scale = TRUE)
pr.out$rotation[,1]
biplot( pr.out,
scale = 1,
cex = .9,
col=c(alpha(1,0), "red")
)
par(mfrow=c(1,2)) #for a graph panel
fvs <- pr.out$sdev^2/sum(pr.out$sdev^2)
plot(
fvs,
xlab = " PC ",
ylab = " Fraction of variance explained",
main= "scree plot",
ylim = c(0, 1) ,
type = 'b') #scree plot
plot(
cumsum(fvs) ,
xlab = " PC ",
ylab = " Cumulative fraction of variance explained",
ylim = c(0, 1) ,
type = 'b')
par(mfrow=c(1,1)) #for a graph panel
# Rendiamo stagione e poc  variabili di tipo categorico usando "factor"
PCA_strati_POC <- function(poc) {
dati <- df_C2[df_C2$POC == poc,]
dati <- subset(dati, select = -c(Gruppo, POC, Stagione, Mese, Wattora, Amperora))
pr.out <- prcomp(dati)#, scale = TRUE)
biplot(pr.out,
scale = 1,
cex = 0.9,
col = c(alpha(1, 0), "red")
)
}
