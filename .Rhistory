cumsum(fvs) ,
xlab = " PC ",
ylab = " Cumulative fraction of variance explained",
ylim = c(0, 1) ,
type = 'b')
par(mfrow=c(1,1)) #for a graph panel
# Rendiamo stagione e poc  variabili di tipo categorico usando "factor"
PCA_strati_POC <- function(poc) {
dati <- df_C2[df_C2$POC == poc,]
dati <- subset(dati, select = -c(Gruppo, POC, Stagione, Mese, Wattora, Amperora))
pr.out <- prcomp(dati)#, scale = TRUE)
biplot(pr.out,
scale = 1,
cex = 0.9,
col = c(alpha(1, 0), "red")
)
}
#! ---------------- Leggiamo il Dataset -------------------
library(tidyverse)
library(dplyr)
library(ggplot2)
library(stats)
library(corrplot)
library(reshape2)
df_C2 <- readRDS("df_C2_C7/df_C2.rds")
df_C4 <- readRDS("df_C2_C7/df_C4.rds")
df_C5 <- readRDS("df_C2_C7/df_C5.rds")
df_C7 <- readRDS("df_C2_C7/df_C7.rds")
# Convertiamo in variabili numeriche quelle categoriche
df_C2 <- df_C2 %>%
mutate(Stagione = case_when(
Stagione == "inverno" ~ 0,
Stagione == "estate" ~ 1,
Stagione == "primavera/autunno" ~ 2,
))
df_C2 <- df_C2 %>%
mutate(POC = case_when(
grepl("1", POC) ~ 1,
grepl("2", POC) ~ 2,
grepl("3", POC) ~ 3,
grepl("4", POC) ~ 4,
grepl("5", POC) ~ 5,
grepl("6", POC) ~ 6,
grepl("7", POC) ~ 7,
grepl("8", POC) ~ 8,
TRUE ~ as.numeric(POC)  # Mantieni i valori originali se non corrispondono a nessuno dei casi sopra
))
#* Visualizza un boxplot rimuovere gli outlier (Wh>1000)
outlier_limit <- 1000
# Identifica gli outlier
outliers <- df_C2$Wattora > outlier_limit | df_C2$Wattora < -outlier_limit
# Stampa il numero di outlier
cat("Numero di outlier:", sum(outliers), "\n")
# Elimina gli outlier dal dataframe
df_C2 <- df_C2[!outliers, ]
plot(pr.out)
#df_C2_scaled <- as.data.frame(scale(df_C2))  # Scale the data frame
ggpairs(subset(df_C2, select = -c(Gruppo, POC, Stagione, Mese, Wattora, Amperora)))
library(GGally)
#df_C2_scaled <- as.data.frame(scale(df_C2))  # Scale the data frame
ggpairs(subset(df_C2, select = -c(Gruppo, POC, Stagione, Mese, Wattora, Amperora)))
biplot(pr.out, scale = 1)
biplot( pr.out,
scale = 1,
cex = .9,
col=c(alpha(1,0), "red")
)
pr.out <- prcomp(subset(df_C2, select = -c(Gruppo, POC, Stagione, Mese, Wattora, Amperora)), scale = TRUE)
plot(pr.out)
#Biplot per le variabili non I, V, Durata
par(mfrow=c(1,1)) #for a graph panel
biplot(pr.out, scale = 1)
biplot( pr.out,
scale = 1,
cex = .9,
col=c(alpha(1,0), "red")
)
#! ---------------- Leggiamo il Dataset -------------------
library(tidyverse)
library(dplyr)
library(ggplot2)
library(stats)
library(corrplot)
library(reshape2)
#load("workspace/my_workspace_stat.RData")
save.image(workspace/file = "my_workspace_stat.RData")
#! ---------------- Leggiamo il Dataset -------------------
library(tidyverse)
library(dplyr)
library(ggplot2)
library(stats)
library(corrplot)
library(reshape2)
#load("workspace/my_workspace_stat.RData")
#save.image(workspace/file = "my_workspace_stat.RData")
df_C2 <- readRDS("df_C2_C7/df_C2.rds")
df_C4 <- readRDS("df_C2_C7/df_C4.rds")
df_C5 <- readRDS("df_C2_C7/df_C5.rds")
df_C7 <- readRDS("df_C2_C7/df_C7.rds")
# Abbiamo 957 gruppi
# Convertiamo in variabili numeriche quelle categoriche
df_C2 <- df_C2 %>%
mutate(Stagione = case_when(
Stagione == "inverno" ~ 0,
Stagione == "estate" ~ 1,
Stagione == "primavera/autunno" ~ 2,
))
df_C2 <- df_C2 %>%
mutate(POC = case_when(
grepl("1", POC) ~ 1,
grepl("2", POC) ~ 2,
grepl("3", POC) ~ 3,
grepl("4", POC) ~ 4,
grepl("5", POC) ~ 5,
grepl("6", POC) ~ 6,
grepl("7", POC) ~ 7,
grepl("8", POC) ~ 8,
TRUE ~ as.numeric(POC)  # Mantieni i valori originali se non corrispondono a nessuno dei casi sopra
))
#! ---------------- Divisione dei gruppi rispetto ai POC ----------------
gruppi_POC_1 <- df_C2$Gruppo[df_C2$POC == "POC_1"]
gruppi_POC_2 <- df_C2$Gruppo[df_C2$POC == "POC_2"]
gruppi_POC_3 <- df_C2$Gruppo[df_C2$POC == "POC_3"]
gruppi_POC_4 <- df_C2$Gruppo[df_C2$POC == "POC_4"]
gruppi_POC_5 <- df_C2$Gruppo[df_C2$POC == "POC_5"]
gruppi_POC_6 <- df_C2$Gruppo[df_C2$POC == "POC_6"]
gruppi_POC_7 <- df_C2$Gruppo[df_C2$POC == "POC_7"]
gruppi_POC_8 <- df_C2$Gruppo[df_C2$POC == "POC_8"]
#! ---------------- corr_matrix e matrix plot -------------
corr_matrix <- df_C2 %>%
dplyr::select(where(is.numeric)) %>%
select(-Gruppo, -Amperora, -Wattora, -POC, -Stagione)%>%
as.matrix() %>%
cor()
corrplot(corr_matrix)
library(GGally)
#matrix plot che mostra scatter plots per tutte le coppie di variabili nel subset del dataframe
ggpairs(subset(df_C2, select = -c(Gruppo, POC, Stagione, Mese, Wattora, Amperora)))
#!----------------- Boxplot--------------
# Calcola la media e la deviazione standard di Wattora
#mean_wattora <- mean(df_C2$Wattora)
#sd_wattora <- sd(df_C2$Wattora)
#* Visualizza un boxplot prima di rimuovere gli outlier
boxplot(Wattora ~ POC, data = df_C2,
main = "Boxplot Wattora Stratified by POC (before removing outliers)",
xlab = "POC",
col = rainbow(length(unique(df_C2$POC))))
grid()
#* Visualizza un boxplot rimuovere gli outlier (Wh>5000)
outlier_limit <- 5000
# Identifica gli outlier
outliers <- df_C2$Wattora > outlier_limit | df_C2$Wattora < -outlier_limit
# Stampa il numero di outlier
cat("Numero di outlier:", sum(outliers), "\n")
# Elimina gli outlier dal dataframe
df_C2 <- df_C2[!outliers, ]
# Visualizza un boxplot dopo l'eliminazione degli outlier (Wh>5000)
boxplot(Wattora ~ POC, data = df_C2,
main = "Boxplot Wattora Stratified by POC (removing observations with Wh>5000)",
xlab = "POC",
col = rainbow(length(unique(df_C2$POC))))
grid()
#* Visualizza un boxplot rimuovere gli outlier (Wh>1000)
outlier_limit <- 1000
# Identifica gli outlier
outliers <- df_C2$Wattora > outlier_limit | df_C2$Wattora < -outlier_limit
# Stampa il numero di outlier
cat("Numero di outlier:", sum(outliers), "\n")
# Elimina gli outlier dal dataframe
df_C2 <- df_C2[!outliers, ] # ci rimangono 930 gruppi
# Visualizza un boxplot dopo l'eliminazione degli outlier (Wh>1000)
boxplot(Wattora ~ POC, data = df_C2,
main = "Boxplot Wattora Stratified by POC (removing observations with Wh>1000)",
xlab = "POC",
col = rainbow(length(unique(df_C2$POC))))
grid()
#! ---------------- PCA  -----------
# Rendiamo stagione e poc  variabili di tipo categorico usando "factor"
df_C2$POC <- as.factor(df_C2$POC)
df_C2$Stagione <- as.factor(df_C2$Stagione)
# Creiamo una funzione per rappresentare i risultati del clustering in base al poc
PCA_strati_POC <- function(poc) {
dati <- df_C2[df_C2$POC == poc,]
dati <- subset(dati, select = -c(Gruppo, POC, Stagione, Mese, Wattora, Amperora))
pr.out <- prcomp(dati)#, scale = TRUE)
biplot(pr.out,
scale = 1,
cex = 0.9,
col = c(alpha(1, 0), "red")
)
}
pr.out <- prcomp(subset(df_C2, select = -c(Gruppo, POC, Stagione, Mese, Wattora, Amperora)), scale = TRUE)
pr.out$rotation[,1]
names(pr.out)
varianza_spiegata <-sum(pr.out$sdev[1:4]^2) / sum(pr.out$sdev^2)  # 90% di varianza spiegata
plot(pr.out)
#Scree plot per la frazione di varianza spiegata e per la varianza cumulata
par(mfrow=c(1,2)) #for a graph panel
fvs <- pr.out$sdev^2/sum(pr.out$sdev^2)
plot(
fvs,
xlab = " PC ",
ylab = " Fraction of variance explained",
main= "scree plot",
ylim = c(0, 1) ,
type = 'b') #scree plot
plot(
cumsum(fvs) ,
xlab = " PC ",
ylab = " Cumulative fraction of variance explained",
ylim = c(0, 1) ,
type = 'b')
#Biplot per le variabili non I, V, Durata
par(mfrow=c(1,1)) #for a graph panel
biplot(pr.out, scale = 1)
biplot( pr.out,
scale = 1,
cex = .9,
col=c(alpha(1,0), "red")
)
#abline(h = 0, v = 0, lty = 2)
#! ---------------- Clustering ------------
set.seed(1)
par(mfrow=c(1,2))
library(cluster)
k_seq <- 2:10
silhouette_vec <- numeric(length(k_seq))
for (kk in seq_along(k_seq)) {
ii <- k_seq[kk]
X <- subset(df_C2, select = -c(Gruppo, POC, Stagione, Mese, Wattora, Amperora))
km_out <- kmeans(X, centers = ii, nstart = 100)
cluster_kk <- km_out$cluster
sil <- silhouette(cluster_kk, dist = dist(X))
silhouette_vec[kk] <- summary(sil)$avg.width
}
plot(k_seq, silhouette_vec, type = "l", xlab = "K", ylab = "Silhouette (average)", main = "Cluster with POC 1-8")
points(k_seq[which.max(silhouette_vec)], max(silhouette_vec), col = "red", pch = 16)
grid()
k_seq <- 2:10
silhouette_vec <- numeric(length(k_seq))
for (kk in seq_along(k_seq)) {
ii <- k_seq[kk]
X <- subset(df_C2, select = -c(Gruppo, POC, Stagione, Mese, Wattora, Amperora))
X <- X[df_C2$POC %in% c(7,8), ]
km_out <- kmeans(X, centers = ii, nstart = 100)
cluster_kk <- km_out$cluster
sil <- silhouette(cluster_kk, dist = dist(X))
silhouette_vec[kk] <- summary(sil)$avg.width
}
plot(k_seq, silhouette_vec, type = "l", xlab = "K", ylab = "Silhouette (average)", main = "Cluster with POC 7-8")
points(k_seq[which.max(silhouette_vec)], max(silhouette_vec), col = "red", pch = 16)
grid()
km.out <- kmeans(X, 3, nstart = 20)
km.out$tot.withinss
names(km.out)
km.out$cluster
par(mfrow=c(2,1)) #for a graph panel
plot( factor(km.out$cluster))
#kmeans sugli score delle prime due PCs
km.out.scores <- kmeans (scores_PC1_2,2, nstart =50)
valori$clusters.k.means.PCA <- km.out.scores$cluster
sum(valori$clusters!=valori$clusters.k.means.PCA)
par(pty="s")
plot(PC2 ~ PC1, data = scores_PC1_2, type = "n", col=clusters(m2), ylim=c(-6,4))
etich = abbreviate(1:valori$ID, minlength = 2)
text(scores_PC1_2$PC1, scores_PC1_2$PC2, labels = etich, col=valori$clusters.k.means.PCA)
abline(parameters(m2)[1:2, 1],lty=3)
abline(parameters(m2)[1:2, 2],lty=3)
abline(h = 0, v = 0,lty=2)
#load("workspace/my_workspace_stat.RData")
save.image(file = "workspace/my_workspace_stat.RData")
load("workspace/my_workspace_stat.RData")
load("workspace/my_workspace_project_clean.RData")
#! ---------------- Creazione tabella per gruppi C2 -----------
#Riempiamo  il nuovo dataset
df_C2 <- data.frame(Gruppo = unique(data$Gruppo), stringsAsFactors = FALSE)
df_C2$Timestamp_iniziale <- character()
#Gruppo
df_C2$Gruppo <- unique(data$Gruppo)
for (group in seq(1, max(data$Gruppo) - 1)) {
subset_gruppo <- data[data$Gruppo == group & data$HMI_IBatt_C2 < 0, ]
# Timestamp iniziale
df_C2$Timestamp_iniziale[group] <- as.character(subset_gruppo$Timestamp[1])
#I iniziale finale e media
df_C2$I_finale[group] <- tail(subset_gruppo$HMI_IBatt_C2[subset_gruppo$HMI_IBatt_C2 < 0], 1)
df_C2$I_iniziale[group]<- head(subset_gruppo$HMI_IBatt_C2[subset_gruppo$HMI_IBatt_C2 < 0], 1)
df_C2$I_media[group] <- mean(subset_gruppo$HMI_IBatt_C2[subset_gruppo$HMI_IBatt_C2 < 0])
#V iniziale finale e media
df_C2$V_finale[group] <- tail(subset_gruppo$HMI_VBatt_C2[subset_gruppo$HMI_IBatt_C2 < 0], 1)
df_C2$V_iniziale[group]<- head(subset_gruppo$HMI_VBatt_C2[subset_gruppo$HMI_IBatt_C2 < 0], 1)
df_C2$V_media[group] <- mean(subset_gruppo$HMI_VBatt_C2[subset_gruppo$HMI_IBatt_C2 < 0])
# Durata scarica
df_C2$Durata_scarica[group] <- subset_gruppo$Durata_scarica[1]
# Mese
df_C2$Mese[group] <- subset_gruppo$mese[1]
# Stagione
df_C2$Stagione[group] <- subset_gruppo$stagione[1]
# Wattora
df_C2$Wattora[group] <- subset_gruppo$Wattora_C2[1]
# Amperora
df_C2$Amperora[group] <- subset_gruppo$Ah_C2[1]
# POC
df_C2$POC[group] <- subset_gruppo$POC_ID[subset_gruppo$POC_ID != 0 & subset_gruppo$HMI_IBatt_C2 < 0][1]
}
df_C2$Timestamp_iniziale <- as.POSIXct(df_C2$Timestamp_iniziale)
# Elimina le righe di df_C2 in cui POC è NA
df_C2 <- na.omit(df_C2)
# Imposta la lingua di base su inglese
Sys.setlocale("LC_TIME", "C")
plot(df_C2$Timestamp_iniziale, df_C2$V_iniziale, type = "line", col = "blue", xlab = "Initial Timestamp", ylab = "Initial Voltage", main = "Line Plot")
plot(df_C2$Timestamp_iniziale, df_C2$V_iniziale, pch = 16, col = "blue", cex = .5,
xlab = "Initial Timestamp", ylab = "Initial Voltage", main = "Scatter Plot ")
plot(df_C2$Timestamp_iniziale, df_C2$V_iniziale, type = "line", col = "blue", xlab = "Initial Timestamp", ylab = "Initial Voltage", main = "Line Plot - Battery 1")
plot(df_C2$Timestamp_iniziale, df_C2$V_iniziale, pch = 16, col = "blue", cex = .5,
xlab = "Initial Timestamp", ylab = "Initial Voltage", main = "Scatter Plot - Battery 1")
#! ---------------- Creazione tabella per gruppi C4 -----------
df_C4$Timestamp_iniziale <- character()
# Riempiamo il nuovo dataset
df_C4 <- data.frame(Gruppo = unique(data$Gruppo), stringsAsFactors = FALSE)
# Gruppo
df_C4$Gruppo <- unique(data$Gruppo)
for (group in seq(1, max(data$Gruppo) - 1)) {
subset_gruppo <- data[data$Gruppo == group & data$HMI_IBatt_C4 < 0, ]
# Timestamp iniziale
df_C4$Timestamp_iniziale[group] <- as.character(subset_gruppo$Timestamp[1])
# I iniziale finale e media
df_C4$I_finale[group] <- tail(subset_gruppo$HMI_IBatt_C4[subset_gruppo$HMI_IBatt_C4 < 0], 1)
df_C4$I_iniziale[group] <- head(subset_gruppo$HMI_IBatt_C4[subset_gruppo$HMI_IBatt_C4 < 0], 1)
df_C4$I_media[group] <- mean(subset_gruppo$HMI_IBatt_C4[subset_gruppo$HMI_IBatt_C4 < 0])
# V iniziale finale e media
df_C4$V_finale[group] <- tail(subset_gruppo$HMI_VBatt_C4[subset_gruppo$HMI_IBatt_C4 < 0], 1)
df_C4$V_iniziale[group] <- head(subset_gruppo$HMI_VBatt_C4[subset_gruppo$HMI_IBatt_C4 < 0], 1)
df_C4$V_media[group] <- mean(subset_gruppo$HMI_VBatt_C4[subset_gruppo$HMI_IBatt_C4 < 0])
# Durata scarica
df_C4$Durata_scarica[group] <- subset_gruppo$Durata_scarica[1]
# Mese
df_C4$Mese[group] <- subset_gruppo$mese[1]
# Stagione
df_C4$Stagione[group] <- subset_gruppo$stagione[1]
# Wattora
df_C4$Wattora[group] <- subset_gruppo$Wattora_C4[1]
# Amperora
df_C4$Amperora[group] <- subset_gruppo$Ah_C4[1]
# POC
df_C4$POC[group] <- subset_gruppo$POC_ID[subset_gruppo$POC_ID != 0 & subset_gruppo$HMI_IBatt_C4 < 0][1]
}
df_C4$Timestamp_iniziale <- as.POSIXct(df_C2$Timestamp_iniziale)
plot(df_C4$Timestamp_iniziale, df_C4$V_iniziale, type = "line", col = "green", xlab = "Initial Timestamp", ylab = "Initial Voltage", main = "Line Plot - Battery 2")
# Elimina le righe di df_C2 in cui POC è NA
df_C4 <- na.omit(df_C4)
plot(df_C4$Timestamp_iniziale, df_C4$V_iniziale, type = "line", col = "green", xlab = "Initial Timestamp", ylab = "Initial Voltage", main = "Line Plot - Battery 2")
# Riempiamo il nuovo dataset
df_C4 <- data.frame(Gruppo = unique(data$Gruppo), stringsAsFactors = FALSE)
df_C4$Timestamp_iniziale <- character()
# Gruppo
df_C4$Gruppo <- unique(data$Gruppo)
for (group in seq(1, max(data$Gruppo) - 1)) {
subset_gruppo <- data[data$Gruppo == group & data$HMI_IBatt_C4 < 0, ]
# Timestamp iniziale
df_C4$Timestamp_iniziale[group] <- as.character(subset_gruppo$Timestamp[1])
# I iniziale finale e media
df_C4$I_finale[group] <- tail(subset_gruppo$HMI_IBatt_C4[subset_gruppo$HMI_IBatt_C4 < 0], 1)
df_C4$I_iniziale[group] <- head(subset_gruppo$HMI_IBatt_C4[subset_gruppo$HMI_IBatt_C4 < 0], 1)
df_C4$I_media[group] <- mean(subset_gruppo$HMI_IBatt_C4[subset_gruppo$HMI_IBatt_C4 < 0])
# V iniziale finale e media
df_C4$V_finale[group] <- tail(subset_gruppo$HMI_VBatt_C4[subset_gruppo$HMI_IBatt_C4 < 0], 1)
df_C4$V_iniziale[group] <- head(subset_gruppo$HMI_VBatt_C4[subset_gruppo$HMI_IBatt_C4 < 0], 1)
df_C4$V_media[group] <- mean(subset_gruppo$HMI_VBatt_C4[subset_gruppo$HMI_IBatt_C4 < 0])
# Durata scarica
df_C4$Durata_scarica[group] <- subset_gruppo$Durata_scarica[1]
# Mese
df_C4$Mese[group] <- subset_gruppo$mese[1]
# Stagione
df_C4$Stagione[group] <- subset_gruppo$stagione[1]
# Wattora
df_C4$Wattora[group] <- subset_gruppo$Wattora_C4[1]
# Amperora
df_C4$Amperora[group] <- subset_gruppo$Ah_C4[1]
# POC
df_C4$POC[group] <- subset_gruppo$POC_ID[subset_gruppo$POC_ID != 0 & subset_gruppo$HMI_IBatt_C4 < 0][1]
}
df_C4$Timestamp_iniziale <- as.POSIXct(df_C2$Timestamp_iniziale)
# Elimina le righe di df_C2 in cui POC è NA
df_C4 <- na.omit(df_C4)
plot(df_C4$Timestamp_iniziale, df_C4$V_iniziale, type = "line", col = "green", xlab = "Initial Timestamp", ylab = "Initial Voltage", main = "Line Plot - Battery 2")
#! ---------------- Creazione tabella per gruppi C4 -----------
#Riempiamo il nuovo dataset
df_C4 <- data.frame(Gruppo = unique(data$Gruppo), stringsAsFactors = FALSE)
df_C4$Timestamp_iniziale <- character()
# Gruppo
df_C4$Gruppo <- unique(data$Gruppo)
for (group in seq(1, max(data$Gruppo) - 1)) {
subset_gruppo <- data[data$Gruppo == group & data$HMI_IBatt_C4 < 0, ]
# Timestamp iniziale
df_C4$Timestamp_iniziale[group] <- as.character(subset_gruppo$Timestamp[1])
# I iniziale finale e media
df_C4$I_finale[group] <- tail(subset_gruppo$HMI_IBatt_C4[subset_gruppo$HMI_IBatt_C4 < 0], 1)
df_C4$I_iniziale[group] <- head(subset_gruppo$HMI_IBatt_C4[subset_gruppo$HMI_IBatt_C4 < 0], 1)
df_C4$I_media[group] <- mean(subset_gruppo$HMI_IBatt_C4[subset_gruppo$HMI_IBatt_C4 < 0])
# V iniziale finale e media
df_C4$V_finale[group] <- tail(subset_gruppo$HMI_VBatt_C4[subset_gruppo$HMI_IBatt_C4 < 0], 1)
df_C4$V_iniziale[group] <- head(subset_gruppo$HMI_VBatt_C4[subset_gruppo$HMI_IBatt_C4 < 0], 1)
df_C4$V_media[group] <- mean(subset_gruppo$HMI_VBatt_C4[subset_gruppo$HMI_IBatt_C4 < 0])
# Durata scarica
df_C4$Durata_scarica[group] <- subset_gruppo$Durata_scarica[1]
# Mese
df_C4$Mese[group] <- subset_gruppo$mese[1]
# Stagione
df_C4$Stagione[group] <- subset_gruppo$stagione[1]
# Wattora
df_C4$Wattora[group] <- subset_gruppo$Wattora_C4[1]
# Amperora
df_C4$Amperora[group] <- subset_gruppo$Ah_C4[1]
# POC
df_C4$POC[group] <- subset_gruppo$POC_ID[subset_gruppo$POC_ID != 0 & subset_gruppo$HMI_IBatt_C4 < 0][1]
}
df_C4$Timestamp_iniziale <- as.POSIXct(df_C4$Timestamp_iniziale)
# Elimina le righe di df_C4 in cui POC è NA
df_C4 <- na.omit(df_C4)
# Imposta la lingua di base su inglese
Sys.setlocale("LC_TIME", "C")
# Line Plot - Battery 4
plot(df_C4$Timestamp_iniziale, df_C4$V_iniziale, type = "line", col = "green", xlab = "Initial Timestamp", ylab = "Initial Voltage", main = "Line Plot - Battery 2")
# Scatter Plot - Battery 4
plot(df_C4$Timestamp_iniziale, df_C4$V_iniziale, pch = 16, col = "green", cex = .5,
xlab = "Initial Timestamp", ylab = "Initial Voltage", main = "Scatter Plot - Battery 2")
# Rimuovi la colonna Timestamp_iniziale
df_C4 <- subset(df_C4, select = -Timestamp_iniziale)
#! ---------------- Creazione tabella per gruppi C5 -----------
#Riempiamo il nuovo dataset
df_C5 <- data.frame(Gruppo = unique(data$Gruppo), stringsAsFactors = FALSE)
df_C5$Timestamp_iniziale <- character()
# Gruppo
df_C5$Gruppo <- unique(data$Gruppo)
for (group in seq(1, max(data$Gruppo) - 1)) {
subset_gruppo <- data[data$Gruppo == group & data$HMI_IBatt_C5 < 0, ]
# Timestamp iniziale
df_C5$Timestamp_iniziale[group] <- as.character(subset_gruppo$Timestamp[1])
# I iniziale finale e media
df_C5$I_finale[group] <- tail(subset_gruppo$HMI_IBatt_C5[subset_gruppo$HMI_IBatt_C5 < 0], 1)
df_C5$I_iniziale[group] <- head(subset_gruppo$HMI_IBatt_C5[subset_gruppo$HMI_IBatt_C5 < 0], 1)
df_C5$I_media[group] <- mean(subset_gruppo$HMI_IBatt_C5[subset_gruppo$HMI_IBatt_C5 < 0])
# V iniziale finale e media
df_C5$V_finale[group] <- tail(subset_gruppo$HMI_VBatt_C5[subset_gruppo$HMI_IBatt_C5 < 0], 1)
df_C5$V_iniziale[group] <- head(subset_gruppo$HMI_VBatt_C5[subset_gruppo$HMI_IBatt_C5 < 0], 1)
df_C5$V_media[group] <- mean(subset_gruppo$HMI_VBatt_C5[subset_gruppo$HMI_IBatt_C5 < 0])
# Durata scarica
df_C5$Durata_scarica[group] <- subset_gruppo$Durata_scarica[1]
# Mese
df_C5$Mese[group] <- subset_gruppo$mese[1]
# Stagione
df_C5$Stagione[group] <- subset_gruppo$stagione[1]
# Wattora
df_C5$Wattora[group] <- subset_gruppo$Wattora_C5[1]
# Amperora
df_C5$Amperora[group] <- subset_gruppo$Ah_C5[1]
# POC
df_C5$POC[group] <- subset_gruppo$POC_ID[subset_gruppo$POC_ID != 0 & subset_gruppo$HMI_IBatt_C5 < 0][1]
}
df_C5$Timestamp_iniziale <- as.POSIXct(df_C5$Timestamp_iniziale)
# Elimina le righe di df_C5 in cui POC è NA
df_C5 <- na.omit(df_C5)
# Imposta la lingua di base su inglese
Sys.setlocale("LC_TIME", "C")
# Line Plot - Battery C5
plot(df_C5$Timestamp_iniziale, df_C5$V_iniziale, type = "line", col = "orange", xlab = "Initial Timestamp", ylab = "Initial Voltage", main = "Line Plot - Battery 3")
# Scatter Plot - Battery C5
plot(df_C5$Timestamp_iniziale, df_C5$V_iniziale, pch = 16, col = "orange", cex = .5,
xlab = "Initial Timestamp", ylab = "Initial Voltage", main = "Scatter Plot - Battery 3")
# Rimuovi la colonna Timestamp_iniziale
df_C5 <- subset(df_C5, select = -Timestamp_iniziale)
#! ---------------- Creazione tabella per gruppi C7 -----------
# Riempiamo il nuovo dataset
df_C7 <- data.frame(Gruppo = unique(data$Gruppo), stringsAsFactors = FALSE)
df_C7$Timestamp_iniziale <- character()
# Gruppo
df_C7$Gruppo <- unique(data$Gruppo)
for (group in seq(1, max(data$Gruppo) - 1)) {
subset_gruppo <- data[data$Gruppo == group & data$HMI_IBatt_C7 < 0, ]
# Timestamp iniziale
df_C7$Timestamp_iniziale[group] <- as.character(subset_gruppo$Timestamp[1])
# I iniziale finale e media
df_C7$I_finale[group] <- tail(subset_gruppo$HMI_IBatt_C7[subset_gruppo$HMI_IBatt_C7 < 0], 1)
df_C7$I_iniziale[group] <- head(subset_gruppo$HMI_IBatt_C7[subset_gruppo$HMI_IBatt_C7 < 0], 1)
df_C7$I_media[group] <- mean(subset_gruppo$HMI_IBatt_C7[subset_gruppo$HMI_IBatt_C7 < 0])
# V iniziale finale e media
df_C7$V_finale[group] <- tail(subset_gruppo$HMI_VBatt_C7[subset_gruppo$HMI_IBatt_C7 < 0], 1)
df_C7$V_iniziale[group] <- head(subset_gruppo$HMI_VBatt_C7[subset_gruppo$HMI_IBatt_C7 < 0], 1)
df_C7$V_media[group] <- mean(subset_gruppo$HMI_VBatt_C7[subset_gruppo$HMI_IBatt_C7 < 0])
# Durata scarica
df_C7$Durata_scarica[group] <- subset_gruppo$Durata_scarica[1]
# Mese
df_C7$Mese[group] <- subset_gruppo$mese[1]
# Stagione
df_C7$Stagione[group] <- subset_gruppo$stagione[1]
# Wattora
df_C7$Wattora[group] <- subset_gruppo$Wattora_C7[1]
# Amperora
df_C7$Amperora[group] <- subset_gruppo$Ah_C7[1]
# POC
df_C7$POC[group] <- subset_gruppo$POC_ID[subset_gruppo$POC_ID != 0 & subset_gruppo$HMI_IBatt_C7 < 0][1]
}
df_C7$Timestamp_iniziale <- as.POSIXct(df_C7$Timestamp_iniziale)
# Elimina le righe di df_C7 in cui POC è NA
df_C7 <- na.omit(df_C7)
# Imposta la lingua di base su inglese
Sys.setlocale("LC_TIME", "C")
# Line Plot - Battery C7
plot(df_C7$Timestamp_iniziale, df_C7$V_iniziale, type = "line", col = "purple", xlab = "Initial Timestamp", ylab = "Initial Voltage", main = "Line Plot - Battery 4")
# Scatter Plot - Battery C7
plot(df_C7$Timestamp_iniziale, df_C7$V_iniziale, pch = 16, col = "purple", cex = .5,
xlab = "Initial Timestamp", ylab = "Initial Voltage", main = "Scatter Plot - Battery 4")
